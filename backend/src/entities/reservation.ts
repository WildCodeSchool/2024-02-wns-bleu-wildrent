import { BaseEntity, Column, CreateDateColumn, Entity, ManyToOne, OneToMany, PrimaryGeneratedColumn } from "typeorm";
import { Field, ObjectType } from "type-graphql";
import { User } from "./user";
import { Article } from "./article";


export enum ReservationStatus {
    Pending = "pending",
    Validated = "validated",
    Ongoing = "ongoing",
    Ended = "ended"
  }

@ObjectType() //typeGraphQl
@Entity() //typeORM
export class Reservation extends BaseEntity {
    @Field()
    @PrimaryGeneratedColumn()
    id: number;

    // automatically generated by typeOrm 
    @Field()
    @CreateDateColumn()
    createdAt: Date;

    @Field()
    @Column()
    startDate: Date;

    @Field()
    @Column()
    endDate: Date;

    @Field()
    @Column()
    status: ReservationStatus;

    @Field(() => User)
    @ManyToOne(() => User, (user) => user.reservations)
    user: User;

    @Field(() => [Article])
    @OneToMany(() => Article, (article) => article.reservation)
    articles: Article[];

}
